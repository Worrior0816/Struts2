<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>

	<package name="demo" extends="struts-default" namespace="/">
		<!-- 1 声明拦截器 -->
		<interceptors>
			<interceptor name="loginintercept" class="cn.itcast.interceptor.LoginInterceptor"></interceptor>
		</interceptors>
		
		<action name="customer_*" class="cn.itcast.action.CustomerAction" method="{1}">
		
			<!-- 2 使用自定义拦截器 -->
			<interceptor-ref name="loginintercept">
				<!-- 配置action里面某些方法不进行拦截
					name属性值： excludeMethods
					值：action不拦截的方法名称
				 -->
				<param name="excludeMethods">login</param>
			</interceptor-ref>
			
			<!-- 3 把默认拦截器手动使用一次 -->
			<interceptor-ref name="defaultStack"></interceptor-ref>
			
			<result name="list">/jsp/customer/list.jsp</result>
			<!-- 到添加页面 -->
			<result name="toAddPage">/jsp/customer/add.jsp</result>
			<!-- 添加之后操作 到列表页面
				请求一次列表的action
				type属性：chain不用缓存问题，一般使用redirectAction重定向到action
			-->
			<result name="addCustomer" type="redirectAction">customer_list</result>
			<!-- 登录操作 -->
			<result name="loginsuccess">/index.htm</result>
			<result name="login">/login.jsp</result>
		</action>
	</package>
</struts>


package cn.itcast.interceptor;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.MethodFilterInterceptor;

/**
 * 拦截器类
 * @author asus
 *
 */
public class LoginInterceptor extends MethodFilterInterceptor {

	//这个方法里面写拦截器逻辑
	protected String doIntercept(ActionInvocation invocation) throws Exception {
		// 判断session里面是否有名称是username的值
		// 得到session
		HttpServletRequest request = ServletActionContext.getRequest();
		Object obj = request.getSession().getAttribute("username");
		//判断
		if(obj != null) {
			//登录状态
			//做类似于放行操作，执行action的方法
			return invocation.invoke();
		} else {
			//不是登录状态
			//不到登录，不执行action的方法，返回登录页面
			//到result标签里面找到名称是login的值，到配置路径里面
			return "login";
		}
	}

}

